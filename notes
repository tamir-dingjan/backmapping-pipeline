Clone the github repository for the backmapping-pipeline here

Make the directories listed in the config.yaml:
mkdir aa_coords aa_cgenff aa_gmx stereo cg_martini

Copy the d-erythro structure files in aa_coords from: /mnt/3a29b482-dac1-4563-be89-d63ad92354e9/plasma_membrane/equil_chol/all_atom/d-erytho/backmapping-pipeline/data/aa_coords/
Copy in the Maestro lipid project from: /mnt/3a29b482-dac1-4563-be89-d63ad92354e9/backmap_portable/data/aa_coords

Make the Schrodinger virtual environment
$SCHRODINGER/run schrodinger_virtualenv.py schro.ve
source schro.ve/bin/activate
python3 -m pip install --upgrade pip
pip install --upgrade MDAnalysis

Make a new venv for this project (Python 3.12.9):
/home/tamir/anaconda3/envs/backmapping-pipeline/bin/python -m venv ./venv

Add dependencies
pip install pyyaml
pip install numpy
pip install networkx
pip install polars
pip install rdkit
pip install mdtraj
pip install scikit-learn

This is much faster using uv:
source ./venv/bin/activate
uv pip install pyyaml numpy networkx polars rdkit mdtraj scikit-learn

Set the pythonpath to the local directory:
export PYTHONPATH=$(pwd)

Copy cholesterol coordinate file to aa_coords:
cp data/chol/CHL1.mol2 data/aa_coords/

Run the preparation scripts:
python scripts/prepare/0_generate_cgenff_params.py --config config.yaml
python scripts/prepare/1_convert_cgenff_params_to_gmx.py --config config.yaml

Open a new shell in the same directory and activate the Schrodinger virtual environment:
source schro.ve/bin/activate
export PYTHONPATH=$(pwd)

Run the next preparation script:
python scripts/prepare/2_make_stereo_reference.py --config config.yaml

Return to the original shell and continue with the preparation scripts:
python scripts/prepare/3_generate_martini_params.py --config config.yaml

Copy the cholesterol files to their respective locations:
cp data/chol/martini_v2.0_CHOL_02.itp data/cg_martini/CHL1.itp
cp data/chol/CHL1.itp data/aa_gmx/CHL1.itp

Continue with the preparation scripts:
python scripts/prepare/4_build_backmaps.py --config config.yaml

Add the cholesterol mapping file:
cp data/chol/CHL1.charmm36.map data/Mapping/

Prepare a snapshot of the CG trajectory with naming changes:
all **Pc lipids to **PC 
CHOL to CHL1

Prepare a 1us stride vesion of the CG trajectory:
prod_1us.xtc

Select residues to backmap. For ceramides let's take all the residues. For SM, take one of each resname:
KgC2 - 1,2,3,4,2607,2608
KfC2 - 5,6,7,8,9,10,11,12,2609,2610,2611,
KAS2 - 1914
ECS2 - 1931
KCS2 - 1940
KCS3 - 2158
QCS2 - 2159
KES2 - 2176
QES2 - 2203
EGS4 - 2215
KGS2 - 2217
QGS2 - 2226
KHS2 - 2230
QHS2 - 2280
KgS2 - 2299
EfS3 - 2430
KfS2 - 2431
KfS3 - 2599
KjS2 - 2600

Regenerate lipid class substructure match SMILES strings from 3-keto versions of the SL headgroups
because the D-erythro SMILES strings do not match the 3-keto AA structures.

Backmap patchs:
python scripts/run/5_make_patches.py --config config.yaml
